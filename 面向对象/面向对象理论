1. 编写结构化的程序
2. 对象就是函数与数据整合到一起的产物

# 想好了之后再做面向对象

类：
  把一类事物的相同特征和动作整合到一起抽象的概念

对象:
    就是基于类二创建的一个具体的事物



 三大特性：
       继承 、 多态 、 封装


# 继承 ------- 当类之间有很多相同的功能时，提取这些共同的功能做成基类，用继承
# 1. 派生继承 ----- 代码重用 方法继承
# 2. 接口继承 -----  子类继承接口 并且实现接口定义的方法
# 3. 继承顺序 ----- 深度优先（经典类） 广度优先 （新式类 -- Py3）


# 多态 ------- 对象通过他们共同的属性和动作来操作及访问，而不需要具体的类
# 多态反应执行的时候
# 多态由继承而来


# 封装  ---- 外部访问不到
# 真正意义的封装： 明确区分内外，内部的实现逻辑，外部无法知晓，并且为封装到内部的逻辑提供一个访问接口给外部使用

# _  开头的是私有的
# __ 开头的会自动重新命名 _类名__属性名



# 反射  ----- 自己检查自己



# 授权 --- 包装的一个特性，可以删除、新建、修改原有的产品的功能
# 方式： 组合
# 关键：  __getattr__

# 描述符：
# 1.描述符本身定义成新式类，被代理的类也应该是新式类
# 2.必须把描述符定义成这个类的属性，不能定义到构造函数中
# 3.优先级： 类属性->数据描述符->实例属性->非数据描述符->找不到触发__getattr__()


PY是弱类型语言 不需要定义类型变量